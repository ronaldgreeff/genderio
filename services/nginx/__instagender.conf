# Define the location of the proxy server to send the request to
upstream hello_flask {
    server web:5000;
}

# Define the parameters for a specific virtual host/server

# http server block
server {
    # Define the server name, IP address, and/or port of the server
    listen 80;
    # Define the server block’s domain names
    server_name instagender.com www.instagender.com;
    # Redirect the traffic to the HTTPS version of the site.
    # The $request_uri variable is the full original request URI, including the arguments.
    return 301 https://instagender.com$request_uri;
}

# catch-all server block (routes any http to https)
# server {
# 	listen 80 default_server;
# 	listen [::]:80 default_server;
# 	server_name _;
# 	return 301 https://$host$request_uri;
# }

# redirect the HTTPS www requests to non-www
server {
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/instagender.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/instagender.com/privkey.pem;

    server_name www.instagender.com;

    return 301 https://instagender.com$request_uri;
}

server {
    listen 443 ssl http2;

    ssl_certificate /etc/letsencrypt/live/instagender.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/instagender.com/privkey.pem;

    server_name instagender.com;

    # Define the specified charset to the “Content-Type” response header field
    charset utf-8;

    # Configure NGINX to deliver static content from the specified folder
    location /static/ {
        alias /home/app/web/project/static/;
    }

    location /media/ {
        alias /home/app/web/project/media/;
    }

    # listen 443 ssl;

    # client_body_buffer_size 64k;

    # Configure NGINX to reverse proxy HTTP requests to the upstream server (Gunicorn (WSGI server))
    location / {
        # Send the request upstream
        proxy_pass http://hello_flask;
        # proxy_redirect off;

        # Redefine the header fields that NGINX sends to the upstream server
        proxy_set_header Host $host;  # the name and port of the NGINX server (Host $host)
        proxy_set_header X-Forwarded-Proto $scheme;  # the schema of the original client request, as in whether it was an http or an https request (X-Forwarded-Proto $scheme)
        proxy_set_header X-Real-IP $remote_addr;  # the IP address of the user (X-Real-IP $remote_addr)
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # the IP addresses of every server the client has been proxied through up to this point (X-Forwarded-For $proxy_add_x_forwarded_for)

        # Define the maximum file size on file uploads
        client_max_body_size 5M;
    }

}
